<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="15.1">
  <help_text>// Uncomment the following line to change the fontsize and font:
fontsize=11
fontfamily=Monospaced //possible: SansSerif,Serif,Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>15</zoom_level>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>45</x>
      <y>0</y>
      <w>1890</w>
      <h>1485</h>
    </coordinates>
    <panel_attributes>Train::Root
--
TRAIN_START_REQ/ SendCfm(TRAIN_START_CFM(STATE))


valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>780</x>
      <y>105</y>
      <w>420</w>
      <h>165</h>
    </coordinates>
    <panel_attributes>Stopped
--
TRAIN_STOP_REQ 
/ SendCfm(TRAIN_STOP_CFM(SUCCESS))

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>120</x>
      <y>900</y>
      <w>1725</w>
      <h>510</h>
    </coordinates>
    <panel_attributes>Started
--
GPIO_IN_PULSE_IND
/ if (from BTN_A) 
    Raise(BTN_A_PRESS)
  else if (from BTN_B)
    Raise(BTN_B_PRESS)

GPIO_IN_HOLD_IND
/ if (from BTN_A)
    Raise(BTN_A_HOLD)
  else if (from BTN_B)
    Raise(BTN_B_HOLD)

GPIO_IN_INACTIVE_IND
/ if (from HALL_SENSOR)
    Raise(HALL_DETECT)

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>1230</x>
      <y>435</y>
      <w>645</w>
      <h>330</h>
    </coordinates>
    <panel_attributes>Stopping
--
entry/ start m_stateTimer,
       SendReq(LIGHT_CTRL_STOP_REQ), SendReq(MOTOR_STOP_REQ),
       SendReq(GPIO_IN_STOP_REQ) to BTN_A, BTN_B, HALL_SENSOR       
exit/ stop m_stateTimer, recall

TRAIN_STOP_REQ/ defer
LIGHT_CTRL_STOP_CFM, MOTOR_STOP_CFM, GPIO_IN_STOP_CFM
/ if (!CheckCfm()) Raise(FAILED(error))
  else if (allReceived) Raise(DONE)
    
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>120</x>
      <y>435</y>
      <w>660</w>
      <h>330</h>
    </coordinates>
    <panel_attributes>Starting
--
entry/ start m_stateTimer,
       SendReq(LIGHT_CTRL_START_REQ), SendReq(MOTOR_START_REQ),
       SendReq(GPIO_IN_START_REQ) to BTN_A, BTN_B, HALL_SENSOR
exit/ stop m_stateTimer

LIGHT_CTRL_START_CFM, MOTOR_START_CFM, GPIO_IN_START_CFM
/ if (!CheckCfm()) Raise(FAILED(error))
  else if (allReceived) Raise(DONE)
   
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>420</x>
      <y>180</y>
      <w>390</w>
      <h>285</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>240.0;10.0;10.0;10.0;10.0;170.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>765</x>
      <y>585</y>
      <w>495</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;310.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>420</x>
      <y>750</y>
      <w>45</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>870</x>
      <y>45</y>
      <w>150</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;10.0;80.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1185</x>
      <y>180</y>
      <w>360</w>
      <h>285</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>220.0;170.0;220.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>1275</x>
      <y>300</y>
      <w>30</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>type=final</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1275</x>
      <y>315</y>
      <w>45</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;80.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1500</x>
      <y>750</y>
      <w>465</w>
      <h>135</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>290.0;70.0;10.0;70.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>435</x>
      <y>285</y>
      <w>285</w>
      <h>75</h>
    </coordinates>
    <panel_attributes>TRAIN_START_REQ
/ m_inEvt = req
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>810</x>
      <y>525</y>
      <w>390</w>
      <h>75</h>
    </coordinates>
    <panel_attributes>FAILED, STATE_TIMER
/ SendCfm(TRAIN_START_CFM(error),
          m_inEvt)
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1515</x>
      <y>285</y>
      <w>375</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>DONE
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1080</x>
      <y>360</y>
      <w>240</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>FAILED, STATE_TIMER
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>450</x>
      <y>810</y>
      <w>435</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>DONE/ SendCfm(TRAIN_START_CFM(SUCCESS),
              m_inEvt)
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1260</x>
      <y>810</y>
      <w>240</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>TRAIN_STOP_REQ/ defer
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>870</x>
      <y>45</y>
      <w>30</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>type=initial</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>1125</x>
      <y>1125</y>
      <w>420</w>
      <h>165</h>
    </coordinates>
    <panel_attributes>Faulted
--
@todo 
Contains 
FaultedOwn and FaultedElse

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1530</x>
      <y>1185</y>
      <w>345</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>210.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1620</x>
      <y>1155</y>
      <w>120</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>FAILED
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>570</x>
      <y>1125</y>
      <w>420</w>
      <h>165</h>
    </coordinates>
    <panel_attributes>Normal
--


valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>765</x>
      <y>1065</y>
      <w>150</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;10.0;80.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>765</x>
      <y>1065</y>
      <w>30</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>type=initial</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1575</x>
      <y>1245</y>
      <w>240</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>@todo Refine fault
handling here, e.g. 
ensuring train is 
stopped.
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>270</x>
      <y>1245</y>
      <w>270</w>
      <h>75</h>
    </coordinates>
    <panel_attributes>INACTIVE_IND is used to
detect when a magnet has
been completely passed
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
