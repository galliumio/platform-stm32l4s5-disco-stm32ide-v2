<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="15.1">
  <help_text>// Uncomment the following line to change the fontsize and font:
fontsize=11
fontfamily=Monospaced //possible: SansSerif,Serif,Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>190</x>
      <y>0</y>
      <w>1650</w>
      <h>1450</h>
    </coordinates>
    <panel_attributes>Light::Root
--
LIGHT_START_REQ/ SendCfm(LIGHT_START_CFM(STATE))
LIGHT_SET_REQ/ SendCfm(LIGHT_SET_CFM(STATE))
LIGHT_PATTERN_REQ/ SendCfm(LIGHT_PATTERN_CFM(STATE))
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>850</x>
      <y>80</y>
      <w>330</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>Stopped
--
entry/ m_manager = HSMN_UNDEF, 
       m_ws2812Hsmn = HSMN_UNDEF
LIGHT_STOP_REQ 
/ SendCfm(LIGHT_STOP_CFM(SUCCESS))

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>240</x>
      <y>500</y>
      <w>1560</w>
      <h>920</h>
    </coordinates>
    <panel_attributes>Started
--
exit/ stop m_ws2812Timer

LIGHT_PATTERN_REQ[patternIndex invalid]
/ SendCfm(LIGHT_PATTERN_CFM(ERROR_PARAM))

WS2812_SET_CFM
/ if (!CheckCfm(m_ws2812Seq)) Raise(FAILED)
  else if (allReceived) stop m_ws2812Timer
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>990</x>
      <y>250</y>
      <w>590</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>Stopping
--
entry/ m_currColor.Set(black), FillColors(m_currColor.Get()),
       SendReq(WS2812_SET_REQ(m_colors, m_ledCnt), m_ws2812Hsmn, m_ws2812Seq),
       restart m_ws2812Timer,       
exit/ stop m_ws2812Timer, recall
LIGHT_STOP_REQ/ defer

WS2812_SET_CFM
/ if (!CheckCfm(m_ws2812Seq)) Raise(FAILED)
  else if (allReceived) Raise(DONE)
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>610</x>
      <y>130</y>
      <w>260</w>
      <h>390</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>240.0;10.0;10.0;10.0;10.0;370.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>930</x>
      <y>40</y>
      <w>100</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;10.0;80.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1170</x>
      <y>130</y>
      <w>140</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>120.0;120.0;120.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>1520</x>
      <y>170</y>
      <w>20</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>type=final</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1520</x>
      <y>180</y>
      <w>30</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;70.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1280</x>
      <y>400</y>
      <w>580</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>560.0;60.0;10.0;60.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>630</x>
      <y>270</y>
      <w>290</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>LIGHT_START_REQ
/ m_manager = req.GetFrom(),
  m_ws2812Hsmn = req.GetWs2812Hsmn(),
  SendCfm(LIGHT_START_CFM(SUCCESS))
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1290</x>
      <y>180</y>
      <w>100</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>DONE
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1380</x>
      <y>210</y>
      <w>160</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>FAILED, WS2812_TIMER
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1140</x>
      <y>430</y>
      <w>200</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>LIGHT_STOP_REQ/ defer
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>930</x>
      <y>40</y>
      <w>20</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>type=initial</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>1040</x>
      <y>550</y>
      <w>340</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>Faulted
--
@todo Contains FaultedOwn and FaultedElse
entry/ stop m_ws2812Timer
LIGHT_OFF_REQ/ ignore
LIGHT_SET_REQ/ ignore
LIGHT_PATTERN_REQ/ ignore
symbol=substate
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1370</x>
      <y>590</y>
      <w>450</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>430.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1410</x>
      <y>570</y>
      <w>160</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>FAILED, WS2812_TIMER
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>710</x>
      <y>680</y>
      <w>570</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>Off
--
entry
/ m_currColor.Set(black), FillColors(m_currColor.Get()),
  SendReq(WS2812_SET_REQ(m_colors, m_ledCnt), m_ws2812Hsmn, m_ws2812Seq),
  restart m_ws2812Timer
LIGHT_OFF_REQ/ SendCfm(LIGHT_OFF_CFM(SUCCESS))
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>280</x>
      <y>930</y>
      <w>730</w>
      <h>460</h>
    </coordinates>
    <panel_attributes>On
--
entry/ m_rampIdx = 0, m_startColor = m_currColor,
       calculate m_rampCnt, m_stepRed, m_stepGreen, m_stepBlue from  
         m_setColor, m_setRampMs and m_startColor,
       start m_intervalTimer(periodic)
exit/ stop m_intervalTimer
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>1060</x>
      <y>930</y>
      <w>570</w>
      <h>460</h>
    </coordinates>
    <panel_attributes>Pattern
--
entry/ currInterval = indexed interval, m_currColor = currInteval.GetLedColor(),
       m_nextTimeMs += currInterval.GetDurationMs(),
       start m_intervalTimer(GetTimeoutMs(m_nextTimeMs)),
       FillColors(m_currColor),
       SendReq(WS2812_SET_REQ(m_colors, m_ledCnt), m_ws2812Hsmn, m_ws2812Seq),
       restart m_ws2812Timer
exit / stop m_intervalTimer
INTERVAL_TIMER[m_intervalIndex &lt; m_currPattern.count-1]/ Raise(NEXT_INTERVAL)
INTERVAL_TIMER[m_intervalIndex == m_currPattern.count-1]/ Raise(LAST_INTERVAL)

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>330</x>
      <y>1060</y>
      <w>540</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>Ramping
--
entry/ update m_currColor based on m_startColor, m_stepXxx, m_rampIdx,
       FillColors(m_currColor.Get()),
       SendReq(WS2812_SET_REQ(m_colors, m_ledCnt), m_ws2812Hsmn, m_ws2812Seq),
       restart m_ws2812Timer,
INTERVAL_TIMER[m_rampIdx &lt; m_rampCnt-1]/ Raise(CONTINUE)
INTERVAL_TIMER[m_rampIdx == m_rampCnt-1]/ Raise(DONE)
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>330</x>
      <y>1240</y>
      <w>580</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>Stable
--
entry
/ if (m_currColor != m_setColor)
    m_currColor = m_setColor, FillColors(m_currColor.Get()),
    SendReq(WS2812_SET_REQ(m_colors, m_ledCnt), m_ws2812Hsmn, m_ws2812Seq),
    restart m_ws2812Timer
  SendCfm(LIGHT_SET_CFM(SUCCESS), m_inEvt)  

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>1300</x>
      <y>1110</y>
      <w>250</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>Repeating
--


valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>790</x>
      <y>640</y>
      <w>80</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;10.0;60.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>790</x>
      <y>640</y>
      <w>20</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>type=initial</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>590</x>
      <y>1020</y>
      <w>80</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;10.0;60.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>580</x>
      <y>1020</y>
      <w>20</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>type=initial</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1270</x>
      <y>750</y>
      <w>550</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>530.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>620</x>
      <y>1170</y>
      <w>30</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>230</x>
      <y>870</y>
      <w>430</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;410.0;10.0;410.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1340</x>
      <y>870</y>
      <w>480</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>460.0;10.0;10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1620</x>
      <y>1020</y>
      <w>100</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;10.0;80.0;90.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>1300</x>
      <y>1240</y>
      <w>250</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>Once
--
LAST_INTERVAL/ Raise(DONE)


valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>640</x>
      <y>1190</y>
      <w>170</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>DONE
/ stop m_intervalTimer
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1400</x>
      <y>680</y>
      <w>290</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>LIGHT_OFF_REQ
/ SendCfm(LIGHT_OFF_CFM(SUCCESS))
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1350</x>
      <y>790</y>
      <w>440</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>LIGHT_PATTERN_REQ[patternIndex valid](startInterval)
/ SendCfm(LIGHT_SET_CFM(ABORTED), m_inEvt),
  m_currPattern = indexed pattern, m_isRepeat = req.IsRepeat(),
  m_intervalIndex = startInterval % m_currPattern.GetCount(),
  m_nextTImeMs = GetSystemMs(),
  SendCfm(LIGHT_PATTERN_CFM(SUCCESS))
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>540</x>
      <y>700</y>
      <w>140</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>Restarting a timer automatically stops it first.
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1640</x>
      <y>990</y>
      <w>150</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>NEXT_INTERVAL
/ ++m_intervalIndex
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1640</x>
      <y>1180</y>
      <w>170</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>LAST_INTERVAL
/ m_intervalIndex = 0
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1620</x>
      <y>1210</y>
      <w>100</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;10.0;80.0;90.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>1120</x>
      <y>1210</y>
      <w>20</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>type=initial</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1190</x>
      <y>1150</y>
      <w>130</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>110.0;10.0;10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1190</x>
      <y>1220</y>
      <w>130</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>110.0;70.0;10.0;70.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1130</x>
      <y>1210</y>
      <w>80</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>60.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1190</x>
      <y>1130</y>
      <w>100</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>[m_isRepeat]
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1200</x>
      <y>1300</y>
      <w>60</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>[else]
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>1190</x>
      <y>1210</y>
      <w>20</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>type=decision</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1600</x>
      <y>310</y>
      <w>180</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>Ensures LEDs are turned 
all when hsm is stopped
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1270</x>
      <y>710</y>
      <w>550</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>530.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1420</x>
      <y>740</y>
      <w>80</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>DONE
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>860</x>
      <y>1080</y>
      <w>80</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;10.0;60.0;70.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>880</x>
      <y>1050</y>
      <w>130</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>CONTINUE
/ ++m_rampIdx
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>660</x>
      <y>830</y>
      <w>230</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>If m_inEvt has been replied, this SendCfm(ABORTED) won't do anything.
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>310</x>
      <y>820</y>
      <w>310</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>LIGHT_SET_REQ(color, rampMs)
/ SendCfm(LIGHT_SET_CFM(ABORTED), m_inEvt),
  m_inEvt = req,
  save m_setColor, m_setRampMs
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1100</x>
      <y>830</y>
      <w>230</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>If m_inEvt has been replied, this SendCfm(ABORTED) won't do anything.
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
