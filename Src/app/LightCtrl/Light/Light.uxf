<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="15.1">
  <help_text>// Uncomment the following line to change the fontsize and font:
fontsize=11
fontfamily=Monospaced //possible: SansSerif,Serif,Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>13</zoom_level>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>0</x>
      <y>0</y>
      <w>2145</w>
      <h>1924</h>
    </coordinates>
    <panel_attributes>Light::Root
--
LIGHT_START_REQ/ SendCfm(LIGHT_START_CFM(STATE))
LIGHT_OFF_REQ/ SendCfm(LIGHT_OFF_CFM(STATE))
LIGHT_SET_REQ/ SendCfm(LIGHT_SET_CFM(STATE))
LIGHT_PATTERN_REQ/ SendCfm(LIGHT_PATTERN_CFM(STATE))
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>858</x>
      <y>104</y>
      <w>429</w>
      <h>143</h>
    </coordinates>
    <panel_attributes>Stopped
--
entry/ m_manager = HSMN_UNDEF, 
       m_ws2812Hsmn = HSMN_UNDEF
LIGHT_STOP_REQ 
/ SendCfm(LIGHT_STOP_CFM(SUCCESS))

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>65</x>
      <y>819</y>
      <w>2028</w>
      <h>1066</h>
    </coordinates>
    <panel_attributes>Started
--
exit/ stop m_ws2812Timer
LIGHT_PATTERN_REQ[patternIndex invalid]
/ SendCfm(LIGHT_PATTERN_CFM(PARAM))
WS2812_SET_CFM
/ if (!CheckCfm(m_ws2812Seq)) Raise(FAILED)
  else if (allReceived) stop m_ws2812Timer
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>1040</x>
      <y>325</y>
      <w>767</w>
      <h>208</h>
    </coordinates>
    <panel_attributes>Stopping
--
entry/ m_currColor.Set(black), FillColors(m_currColor.Get()),
       SendReq(WS2812_SET_REQ(m_colors, m_ledCnt), m_ws2812Hsmn, m_ws2812Seq),
       restart m_ws2812Timer,       
exit/ stop m_ws2812Timer, recall
LIGHT_STOP_REQ/ defer

WS2812_SET_CFM
/ if (!CheckCfm(m_ws2812Seq)) Raise(FAILED)
  else if (allReceived) Raise(DONE)
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>546</x>
      <y>169</y>
      <w>338</w>
      <h>676</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>240.0;10.0;10.0;10.0;10.0;500.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>962</x>
      <y>52</y>
      <w>130</w>
      <h>78</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;10.0;80.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1274</x>
      <y>169</y>
      <w>182</w>
      <h>182</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>120.0;120.0;120.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>1729</x>
      <y>221</y>
      <w>26</w>
      <h>26</h>
    </coordinates>
    <panel_attributes>type=final</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1729</x>
      <y>234</y>
      <w>39</w>
      <h>117</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;70.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1417</x>
      <y>520</y>
      <w>754</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>560.0;60.0;10.0;60.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>572</x>
      <y>351</y>
      <w>377</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>LIGHT_START_REQ
/ m_manager = req.GetFrom(),
  m_ws2812Hsmn = req.GetWs2812Hsmn(),
  SendCfm(LIGHT_START_CFM(SUCCESS))
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1430</x>
      <y>234</y>
      <w>130</w>
      <h>39</h>
    </coordinates>
    <panel_attributes>DONE
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1547</x>
      <y>273</y>
      <w>208</w>
      <h>39</h>
    </coordinates>
    <panel_attributes>FAILED, WS2812_TIMER
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1833</x>
      <y>559</y>
      <w>260</w>
      <h>39</h>
    </coordinates>
    <panel_attributes>LIGHT_STOP_REQ/ defer
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>962</x>
      <y>52</y>
      <w>26</w>
      <h>26</h>
    </coordinates>
    <panel_attributes>type=initial</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>1040</x>
      <y>624</y>
      <w>364</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>Exception
--
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1222</x>
      <y>715</y>
      <w>39</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;80.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1248</x>
      <y>754</y>
      <w>351</w>
      <h>52</h>
    </coordinates>
    <panel_attributes>FAILED, WS2812_TIMER
/ Send(LIGHT_EXCEPTION_IND, m_manager)
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>676</x>
      <y>923</y>
      <w>741</w>
      <h>143</h>
    </coordinates>
    <panel_attributes>Off
--
entry
/ m_currColor.Set(black), FillColors(m_currColor.Get()),
  SendReq(WS2812_SET_REQ(m_colors, m_ledCnt), m_ws2812Hsmn, m_ws2812Seq),
  restart m_ws2812Timer
LIGHT_OFF_REQ/ SendCfm(LIGHT_OFF_CFM(SUCCESS))
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>117</x>
      <y>1248</y>
      <w>949</w>
      <h>598</h>
    </coordinates>
    <panel_attributes>On
--
entry/ m_rampIdx = 0, m_startColor = m_currColor,
       calculate m_rampCnt, m_stepRed, m_stepGreen, m_stepBlue from  
         m_setColor, m_setRampMs and m_startColor,
       start m_intervalTimer(periodic)
exit/ stop m_intervalTimer
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>1131</x>
      <y>1248</y>
      <w>741</w>
      <h>598</h>
    </coordinates>
    <panel_attributes>Pattern
--
entry/ currInterval = indexed interval, m_currColor = currInteval.GetLedColor(),
       m_nextTimeMs += currInterval.GetDurationMs(),
       start m_intervalTimer(GetTimeoutMs(m_nextTimeMs)),
       FillColors(m_currColor),
       SendReq(WS2812_SET_REQ(m_colors, m_ledCnt), m_ws2812Hsmn, m_ws2812Seq),
       restart m_ws2812Timer
exit / stop m_intervalTimer
INTERVAL_TIMER[m_intervalIndex &lt; m_currPattern.count-1]/ Raise(NEXT_INTERVAL)
INTERVAL_TIMER[m_intervalIndex == m_currPattern.count-1]/ Raise(LAST_INTERVAL)

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>182</x>
      <y>1417</y>
      <w>702</w>
      <h>156</h>
    </coordinates>
    <panel_attributes>Ramping
--
entry/ update m_currColor based on m_startColor, m_stepXxx, m_rampIdx,
       FillColors(m_currColor.Get()),
       SendReq(WS2812_SET_REQ(m_colors, m_ledCnt), m_ws2812Hsmn, m_ws2812Seq),
       restart m_ws2812Timer,
INTERVAL_TIMER[m_rampIdx &lt; m_rampCnt-1]/ Raise(CONTINUE)
INTERVAL_TIMER[m_rampIdx == m_rampCnt-1]/ Raise(DONE)
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>182</x>
      <y>1651</y>
      <w>754</w>
      <h>156</h>
    </coordinates>
    <panel_attributes>Stable
--
entry
/ if (m_currColor != m_setColor)
    m_currColor = m_setColor, FillColors(m_currColor.Get()),
    SendReq(WS2812_SET_REQ(m_colors, m_ledCnt), m_ws2812Hsmn, m_ws2812Seq),
    restart m_ws2812Timer
  SendCfm(LIGHT_SET_CFM(SUCCESS), m_inEvt)  

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>1443</x>
      <y>1482</y>
      <w>325</w>
      <h>117</h>
    </coordinates>
    <panel_attributes>Repeating
--


valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>780</x>
      <y>871</y>
      <w>104</w>
      <h>78</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;10.0;60.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>780</x>
      <y>871</y>
      <w>26</w>
      <h>26</h>
    </coordinates>
    <panel_attributes>type=initial</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>520</x>
      <y>1365</y>
      <w>104</w>
      <h>78</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;10.0;60.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>507</x>
      <y>1365</y>
      <w>26</w>
      <h>26</h>
    </coordinates>
    <panel_attributes>type=initial</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1404</x>
      <y>1014</y>
      <w>715</w>
      <h>39</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>530.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>559</x>
      <y>1560</y>
      <w>39</w>
      <h>117</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>52</x>
      <y>1170</y>
      <w>559</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;410.0;10.0;410.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1495</x>
      <y>1170</y>
      <w>624</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>460.0;10.0;10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1859</x>
      <y>1365</y>
      <w>130</w>
      <h>143</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;10.0;80.0;90.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>1443</x>
      <y>1651</y>
      <w>325</w>
      <h>117</h>
    </coordinates>
    <panel_attributes>Once
--
LAST_INTERVAL/ Raise(DONE)


valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>585</x>
      <y>1586</y>
      <w>221</w>
      <h>52</h>
    </coordinates>
    <panel_attributes>DONE
/ stop m_intervalTimer
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1573</x>
      <y>923</y>
      <w>377</w>
      <h>52</h>
    </coordinates>
    <panel_attributes>LIGHT_OFF_REQ
/ SendCfm(LIGHT_OFF_CFM(SUCCESS))
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1508</x>
      <y>1066</y>
      <w>572</w>
      <h>117</h>
    </coordinates>
    <panel_attributes>LIGHT_PATTERN_REQ[patternIndex valid](startInterval)
/ SendCfm(LIGHT_SET_CFM(ABORTED), m_inEvt),
  m_currPattern = indexed pattern, m_isRepeat = req.IsRepeat(),
  m_intervalIndex = startInterval % m_currPattern.GetCount(),
  m_nextTImeMs = GetSystemMs(),
  SendCfm(LIGHT_PATTERN_CFM(SUCCESS))
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>468</x>
      <y>988</y>
      <w>182</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>Restarting a timer automatically stops it first.
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1885</x>
      <y>1326</y>
      <w>195</w>
      <h>52</h>
    </coordinates>
    <panel_attributes>NEXT_INTERVAL
/ ++m_intervalIndex
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1885</x>
      <y>1573</y>
      <w>221</w>
      <h>52</h>
    </coordinates>
    <panel_attributes>LAST_INTERVAL
/ m_intervalIndex = 0
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1859</x>
      <y>1612</y>
      <w>130</w>
      <h>143</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;10.0;80.0;90.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>1209</x>
      <y>1612</y>
      <w>26</w>
      <h>26</h>
    </coordinates>
    <panel_attributes>type=initial</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1300</x>
      <y>1534</y>
      <w>169</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>110.0;10.0;10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1300</x>
      <y>1625</y>
      <w>169</w>
      <h>117</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>110.0;70.0;10.0;70.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1222</x>
      <y>1612</y>
      <w>104</w>
      <h>39</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>60.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1300</x>
      <y>1508</y>
      <w>130</w>
      <h>39</h>
    </coordinates>
    <panel_attributes>[m_isRepeat]
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1313</x>
      <y>1729</y>
      <w>78</w>
      <h>39</h>
    </coordinates>
    <panel_attributes>[else]
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>1300</x>
      <y>1612</y>
      <w>26</w>
      <h>26</h>
    </coordinates>
    <panel_attributes>type=decision</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1833</x>
      <y>403</y>
      <w>234</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>Ensures LEDs are turned 
all when hsm is stopped
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1404</x>
      <y>962</y>
      <w>715</w>
      <h>39</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>530.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1599</x>
      <y>1001</y>
      <w>104</w>
      <h>39</h>
    </coordinates>
    <panel_attributes>DONE
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>871</x>
      <y>1443</y>
      <w>104</w>
      <h>117</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;10.0;60.0;70.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>897</x>
      <y>1404</y>
      <w>169</w>
      <h>52</h>
    </coordinates>
    <panel_attributes>CONTINUE
/ ++m_rampIdx
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>741</x>
      <y>1300</y>
      <w>273</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>If m_inEvt has been replied,
the SendCfm(ABORTED) in exit
action won't do anything.
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>156</x>
      <y>1118</y>
      <w>403</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>LIGHT_SET_REQ(color, rampMs)
/ SendCfm(LIGHT_SET_CFM(ABORTED), m_inEvt),
  m_inEvt = req,
  save m_setColor, m_setRampMs
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>611</x>
      <y>1105</y>
      <w>481</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>LIGHT_SET_CFM(ABORTED) is replied based on the saved
m_inEvt. If it is cleared, it won't do anything (OK).
With QP, as exit action runs after transition action,
this CFM must not be sent in exit action (of On) as
m_inEvt will be overwritten by the new request.
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
