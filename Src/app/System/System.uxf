<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="15.1">
  <help_text>// Uncomment the following line to change the fontsize and font:
fontsize=11
fontfamily=Monospaced //possible: SansSerif,Serif,Monospaced

//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>12</zoom_level>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>156</x>
      <y>0</y>
      <w>1836</w>
      <h>1740</h>
    </coordinates>
    <panel_attributes>System::Root
--
entry/ setup global peripherals for normal power mode
SYSTEM_START_REQ/ SendCfm(SYSTEM_START_CFM(STATE))


valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>792</x>
      <y>96</y>
      <w>492</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>Stopped
--
SYSTEM_STOP_REQ/ SendCfm(SYSTEM_STOP_CFM(SUCCESS))

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>384</x>
      <y>1452</y>
      <w>1296</w>
      <h>252</h>
    </coordinates>
    <panel_attributes>Started
--
exit/ stop m_idleCntTimer
IDLE_CNT_TIMER
/ idleCnt = GetIdleCnt() limited by m_maxIdleCnt
  m_cpuUtilPercent = 100 - (idleCnt * 100 / m_maxIdleCnt)
  print result
SYSTEM_CPU_UTIL_REQ(enable)
/ if (enable)
    GetIdleCnt(), restart periodic m_idleCntTimer
  else stop m_idleCntTimer
GPIO_IN_PULSE_IND / Send(TRAFFIC_CAR_NS_REQ) 
GPIO_IN_HOLD_IND / Send(TRAFFIC_CAR_EW_REQ) 


valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>1224</x>
      <y>336</y>
      <w>684</w>
      <h>684</h>
    </coordinates>
    <panel_attributes>Stopping
--
entry/ start m_stateTimer,
exit/ stop m_stateTimer, recall

SYSTEM_RESTART_REQ, SYSTEM_STOP_REQ
/ defer


valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>576</x>
      <y>156</y>
      <w>240</w>
      <h>204</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>180.0;10.0;10.0;10.0;10.0;150.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>876</x>
      <y>636</y>
      <w>372</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;290.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>576</x>
      <y>1308</y>
      <w>36</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>948</x>
      <y>48</y>
      <w>24</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>type=initial</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>960</x>
      <y>48</y>
      <w>96</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;10.0;60.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1272</x>
      <y>156</y>
      <w>264</w>
      <h>204</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>200.0;150.0;200.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>1260</x>
      <y>252</y>
      <w>24</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>type=final</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1260</x>
      <y>264</y>
      <w>36</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;60.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1488</x>
      <y>1008</y>
      <w>528</w>
      <h>156</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>420.0;110.0;10.0;110.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>588</x>
      <y>240</y>
      <w>204</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>SYSTEM_RESTART_REQ,
SYSTEM_START_REQ
/ m_inEvt = req
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>900</x>
      <y>588</y>
      <w>300</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>FAILED, STATE_TIMER
/ SendCfm(SYSTEM_START_CFM(error),
          m_inEvt)
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1512</x>
      <y>240</y>
      <w>60</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>DONE
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1092</x>
      <y>288</y>
      <w>192</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>FAILED, STATE_TIMER
/ FW_ASSERT(0)
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>588</x>
      <y>1368</y>
      <w>408</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>DONE
/ SendCfm(SYSTEM_START_CFM(SUCCESS), m_inEvt)
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1572</x>
      <y>1080</y>
      <w>180</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>SYSTEM_RESTART_REQ,
SYSTEM_STOP_REQ
/ defer</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>240</x>
      <y>336</y>
      <w>648</w>
      <h>984</h>
    </coordinates>
    <panel_attributes>Starting
--
entry/ start m_stateTimer
exit/ stop m_stateTimer
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>276</x>
      <y>624</y>
      <w>576</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>Starting1
--
entry
/ SendReq(COMPOSITE_ACT_START_REQ), SendReq(SIMPLE_ACT_START_REQ),
  SendReq(DEMO_START_REQ), SendReq(WASH_START_REQ),
  SendReq(TRAFFIC_START_REQ),        // #ifdef ENABLE_TRAFFIC
  SendReq(GPIO_IN_START_REQ), SendReq(GPIO_OUT_START_REQ), 
  SendReq(NODE_START_REQ(SRV_DOMAIN, SRV_PORT))

COMPOSITE_ACT_START_CFM, SIMPLE_ACT_START_CFM,
DEMO_START_CFM, WASH_START_CFM, TRAFFIC_START_CFM,
GPIO_IN_START_CFM, GPIO_OUT_START_CFM, NODE_START_CFM
/ if (!CheckCfm()) Raise(FAILED(error))
  else if (allReceived) Raise(NEXT)
    
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>276</x>
      <y>924</y>
      <w>576</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>Starting2
--
entry/ SendReq(SENSOR_START_REQ)

SENSOR_START_CFM
/ if (!CheckCfm()) Raise(FAILED(error))
  else if (allReceived) Raise(NEXT)
    
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>576</x>
      <y>852</y>
      <w>36</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>588</x>
      <y>876</y>
      <w>60</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>NEXT
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>276</x>
      <y>1116</y>
      <w>576</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>Starting3
--
entry/ SendReq(LEVEL_METER_START_REQ), // #ifdef ENABLE_LEVEL_METER
       SendReq(GUI_MGR_START_REQ),     // #ifdef ENABLE_TRAIN
       SendReq(TRAIN_START_REQ),       // #ifdef ENABLE_TRAIN
       
LEVEL_METER_START_CFM, GUI_START_CFM, TRAIN_START_CFM
/ if (!CheckCfm()) Raise(FAILED(error))
  else if (allReceived) Raise(DONE)
    
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>576</x>
      <y>1044</y>
      <w>36</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>588</x>
      <y>1068</y>
      <w>60</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>NEXT
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>1260</x>
      <y>456</y>
      <w>612</w>
      <h>252</h>
    </coordinates>
    <panel_attributes>Stopping2
--
entry/ SendReq(COMPOSITE_ACT_STOP_REQ), SendReq(SIMPLE_ACT_STOP_REQ),
       SendReq(DEMO_STOP_REQ, SendReq(WASH_STOP_REQ), 
       SendReq(TRAFFIC_STOP_REQ),
       SendReq(GPIO_IN_STOP_REQ), SendReq(GPIO_OUT_STOP_REQ),
       SendReq(NODE_STOP_REQ), SendReq(SENSOR_STOP_REQ)

COMPOSITE_ACT_STOP_CFM, SIMPLE_ACT_STOP_CFM,
DEMO_STOP_CFM, WASH_STOP_CFM, TRAFFIC_STOP_CFM,
GPIO_IN_STOP_CFM, GPIO_OUT_STOP_CFM,
NODE_STOP_CFM, SENSOR_STOP_CFM
/ if (!CheckCfm()) Raise(FAILED(error))
  else if (allReceived) Raise(DONE)
    
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>1260</x>
      <y>792</y>
      <w>612</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>Stopping1
--
entry/ SendReq(LEVEL_METER_STOP_REQ),
       SendReq(GUI_MGR_STOP_REQ),
       SendReq(TRAIN_STOP_REQ)

LEVEL_METER_STOP_CFM, GUI_MGR_STOP_REQ, TRAIN_STOP_REQ
/ if (!CheckCfm()) Raise(FAILED(error))
  else if (allReceived) Raise(NEXT)
    
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1488</x>
      <y>696</y>
      <w>36</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;80.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1500</x>
      <y>744</y>
      <w>60</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>NEXT
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>684</x>
      <y>396</y>
      <w>24</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>type=initial</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>696</x>
      <y>396</y>
      <w>96</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;10.0;60.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>1596</x>
      <y>744</y>
      <w>24</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>type=initial</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1608</x>
      <y>744</y>
      <w>96</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;10.0;60.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>276</x>
      <y>444</y>
      <w>576</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>Prestarting
--
entry/ GetIdleCnt(), start m_idleCntTimer
exit/ stop m_idleCntTimer
IDLE_CNT_TIMER
/ m_maxIdleCnt = GetIdleCnt() * scaleFactor,
  Raise(NEXT)
    
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>576</x>
      <y>552</y>
      <w>36</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>588</x>
      <y>576</y>
      <w>60</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>NEXT
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>924</x>
      <y>672</y>
      <w>240</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>@todo - Check request event
and send SYSTEM_RESTART_CFM
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>984</x>
      <y>1368</y>
      <w>240</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>@todo - Check request event
and send SYSTEM_RESTART_CFM
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
